{"version":3,"file":"helper.js","sourceRoot":"","sources":["../src/helper.ts"],"names":[],"mappings":";;AAKA,wDA+BC;AAED,gEAIC;AAxCD,qCAA4G;AAC5G,mCAAqE;AAErE,SAAgB,sBAAsB,CAAC,QAAyB,EAAE,OAAqB;IACrF,QAAQ,OAAO,EAAE,CAAC;QAChB,KAAK,oBAAY,CAAC,aAAa,CAAC,CAAC,CAAC;YAChC,MAAM,aAAa,GAAG,QAAQ,CAAC,SAAS,CAAC,mBAAU,CAAC,CAAA;YACpD,OAAO;gBACL,aAAa;aACd,CAAA;QACH,CAAC;QAED,KAAK,oBAAY,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,MAAM,OAAO,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,mBAAU,CAAC,CAAA;YAClD,MAAM,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,mBAAU,CAAC,CAAA;YAC1C,MAAM,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,mBAAU,CAAC,CAAA;YAE1C,OAAO;gBACL,OAAO;gBACP,GAAG;gBACH,GAAG;aACJ,CAAA;QACH,CAAC;QAED,KAAK,oBAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC;YACrC,MAAM,EAAE,GAAG,QAAQ,CAAC,SAAS,CAAC,mBAAU,CAAC,CAAA;YACzC,MAAM,GAAG,GAAG,QAAQ,CAAC,SAAS,CAAC,mBAAU,CAAC,CAAA;YAE1C,OAAO;gBACL,EAAE;gBACF,GAAG;aACJ,CAAA;QACH,CAAC;IACH,CAAC;AACH,CAAC;AAED,SAAgB,0BAA0B,CAAC,QAAyB;IAClE,MAAM,QAAQ,GAAG,QAAQ,CAAC,SAAS,CAAC,qBAAY,CAAC,CAAA;IAEjD,OAAO,EAAE,QAAQ,EAAE,CAAA;AACrB,CAAC","sourcesContent":["import { ResponsePayload } from '@zondax/ledger-js/dist/payload'\n\nimport { ED25519_SIGNATURE_LEN, IDENTITY_LEN, KEY_LENGTH, REDJUBJUB_SIGNATURE_LEN, VERSION } from './consts'\nimport { IronfishKeys, KeyResponse, ResponseIdentity } from './types'\n\nexport function processGetKeysResponse(response: ResponsePayload, keyType: IronfishKeys): KeyResponse {\n  switch (keyType) {\n    case IronfishKeys.PublicAddress: {\n      const publicAddress = response.readBytes(KEY_LENGTH)\n      return {\n        publicAddress,\n      }\n    }\n\n    case IronfishKeys.ViewKey: {\n      const viewKey = response.readBytes(2 * KEY_LENGTH)\n      const ivk = response.readBytes(KEY_LENGTH)\n      const ovk = response.readBytes(KEY_LENGTH)\n\n      return {\n        viewKey,\n        ivk,\n        ovk,\n      }\n    }\n\n    case IronfishKeys.ProofGenerationKey: {\n      const ak = response.readBytes(KEY_LENGTH)\n      const nsk = response.readBytes(KEY_LENGTH)\n\n      return {\n        ak,\n        nsk,\n      }\n    }\n  }\n}\n\nexport function processGetIdentityResponse(response: ResponsePayload): ResponseIdentity {\n  const identity = response.readBytes(IDENTITY_LEN)\n\n  return { identity }\n}\n"]}